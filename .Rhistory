plot(A2,1:90)
source("fixedbaar1.r")
setwd("\\Users\\mellm\\github\\REU2022\\Variations_of_bars")
source("fixedbaar1.r")
test_data_45 = function(){
beta1 = .7
stdev=1
y= rnorm(1,0,1)
for( i in 2:90){
y[i] = beta1*y[i-1]+rnorm(1,0,stdev)}
data_45=y
time = c(1:90)
test_data_45 = data.frame(time, data_45)
return(test_data_45)
}
iterations=1000
runs=10
L=matrix(NA,nrow=iterations,ncol=runs)
A=NA
M=NA
B=NA
for(i in 1:runs){
y=test_data_45()
current_data = y
break_p = breakpoints(current_data[,2] ~ current_data[,1], breaks = 5, h = 0.1)
starting_breakpoints = break_p$breakpoints
test1=baar(starting_breakpoints,1:90,y[,2],iterations)
print(i)
L[,i]=test1$NumBkpts
M[i]=length(starting_breakpoints[!is.na(starting_breakpoints)])
A=c(A,(unlist(test1$Breakpoints))) #Baar location of breakpoints
B=c(B,(starting_breakpoints)) #B-P
}
A2=A[!is.na(A)]
B2=B[!is.na(B)]
mean(L)
sd(L)
mean(M)
sd(M)
hist(A2, breaks=100)
hist(B2, breaks=100)
A2
hist(A2, breaks=10)
hist(A2, breaks=20)
hist(A2, breaks=20)
setwd("\\Users\\mellm\\github\\REU2022")
source("NewBaar.r")
test_data_45 = function(){
beta1 = .7
stdev=1
y= rnorm(1,0,1)
for( i in 2:90){
y[i] = beta1*y[i-1]+rnorm(1,0,stdev)}
data_45=y
time = c(1:90)
test_data_45 = data.frame(time, data_45)
return(test_data_45)
}
iterations=1000
runs=10
L=matrix(NA,nrow=iterations,ncol=runs)
A=NA
M=NA
B=NA
for(i in 1:runs){
y=test_data_45()
current_data = y
break_p = breakpoints(current_data[,2] ~ current_data[,1], breaks = 5, h = 0.1)
starting_breakpoints = break_p$breakpoints
test1=baar(starting_breakpoints,1:90,y[,2],iterations)
print(i)
L[,i]=test1$NumBkpts
M[i]=length(starting_breakpoints[!is.na(starting_breakpoints)])
A=c(A,(unlist(test1$Breakpoints))) #Baar location of breakpoints
B=c(B,(starting_breakpoints)) #B-P
}
A2=A[!is.na(A)]
B2=B[!is.na(B)]
mean(L)
sd(L)
mean(M)
sd(M)
hist(A2, breaks=20)
setwd("\\Users\\mellm\\github\\REU2022\\Variations_of_bars")
source("fixedbaar1.r")
test_data_45 = function(){
beta1 = .7
stdev=1
y= rnorm(1,0,1)
for( i in 2:90){
y[i] = beta1*y[i-1]+rnorm(1,0,stdev)}
data_45=y
time = c(1:90)
test_data_45 = data.frame(time, data_45)
return(test_data_45)
}
iterations=1000
runs=10
L=matrix(NA,nrow=iterations,ncol=runs)
A=NA
M=NA
B=NA
for(i in 1:runs){
y=test_data_45()
current_data = y
break_p = breakpoints(current_data[,2] ~ current_data[,1], breaks = 5, h = 0.1)
starting_breakpoints = break_p$breakpoints
test1=baar(starting_breakpoints,1:90,y[,2],iterations)
print(i)
L[,i]=test1$NumBkpts
M[i]=length(starting_breakpoints[!is.na(starting_breakpoints)])
A=c(A,(unlist(test1$Breakpoints))) #Baar location of breakpoints
B=c(B,(starting_breakpoints)) #B-P
}
A2=A[!is.na(A)]
B2=B[!is.na(B)]
mean(L)
sd(L)
mean(M)
sd(M)
hist(A2, breaks=20)
plot(L,M)
plot(L,1,mean)
plot(apply(L,1,mean))
hist(A2, breaks=100)
plot(apply(L,1,mean))
setwd("\\Users\\mellm\\github\\REU2022\\Variations_of_bars")
source("fixedbaar1.r")
setwd("\\Users\\mellm\\github\\REU2022")
source("NewBaar.r")
test_data_45 = function(){
beta1 = .7
stdev=1
y= rnorm(1,0,1)
for( i in 2:90){
y[i] = beta1*y[i-1]+rnorm(1,0,stdev)}
data_45=y
time = c(1:90)
test_data_45 = data.frame(time, data_45)
return(test_data_45)
}
iterations=1000
runs=10
L=matrix(NA,nrow=iterations,ncol=runs)
A=NA
M=NA
B=NA
for(i in 1:runs){
y=test_data_45()
current_data = y
break_p = breakpoints(current_data[,2] ~ current_data[,1], breaks = 5, h = 0.1)
starting_breakpoints = break_p$breakpoints
test1=baar(starting_breakpoints,1:90,y[,2],iterations)
print(i)
L[,i]=test1$NumBkpts
M[i]=length(starting_breakpoints[!is.na(starting_breakpoints)])
A=c(A,(unlist(test1$Breakpoints))) #Baar location of breakpoints
B=c(B,(starting_breakpoints)) #B-P
}
A2=A[!is.na(A)]
B2=B[!is.na(B)]
mean(L)
sd(L)
mean(M)
sd(M)
hist(A2, breaks=100)
#hist(B2, breaks=100)
plot(apply(L,1,mean))
setwd("\\Users\\mellm\\github\\REU2022\\Variations_of_bars")
source("fixedbaar1.r")
test_data_45 = function(){
beta1 = .7
stdev=1
y= rnorm(1,0,1)
for( i in 2:90){
y[i] = beta1*y[i-1]+rnorm(1,0,stdev)}
data_45=y
time = c(1:90)
test_data_45 = data.frame(time, data_45)
return(test_data_45)
}
iterations=1000
runs=10
L=matrix(NA,nrow=iterations,ncol=runs)
A=NA
M=NA
B=NA
for(i in 1:runs){
y=test_data_45()
current_data = y
break_p = breakpoints(current_data[,2] ~ current_data[,1], breaks = 5, h = 0.1)
starting_breakpoints = break_p$breakpoints
test1=baar(starting_breakpoints,1:90,y[,2],iterations)
print(i)
L[,i]=test1$NumBkpts
M[i]=length(starting_breakpoints[!is.na(starting_breakpoints)])
A=c(A,(unlist(test1$Breakpoints))) #Baar location of breakpoints
B=c(B,(starting_breakpoints)) #B-P
}
A2=A[!is.na(A)]
B2=B[!is.na(B)]
mean(L)
sd(L)
mean(M)
sd(M)
hist(A2, breaks=100)
#hist(B2, breaks=100)
plot(apply(L,1,mean))
setwd("\\Users\\mellm\\github\\REU2022\\Variations_of_bars")
source("fixedbaar1.r")
test_data_45 = function(){
beta1 = -.3
beta2 = -.7
stdev=1
y= rnorm(1,0,1)
for( i in 2:30){
y[i] = beta1*y[i-1]+rnorm(1,0,stdev)}
data_45=y
time = c(31:90)
test_data_45 = data.frame(time, data_45)
return(test_data_45)
}
iterations=1000
runs=10
L=matrix(NA,nrow=iterations,ncol=runs)
A=NA
M=NA
B=NA
for(i in 1:runs){
y=test_data_45()
current_data = y
break_p = breakpoints(current_data[,2] ~ current_data[,1], breaks = 5, h = 0.1)
starting_breakpoints = break_p$breakpoints
test1=baar(starting_breakpoints,1:90,y[,2],iterations)
print(i)
L[,i]=test1$NumBkpts
M[i]=length(starting_breakpoints[!is.na(starting_breakpoints)])
A=c(A,(unlist(test1$Breakpoints))) #Baar location of breakpoints
B=c(B,(starting_breakpoints)) #B-P
}
A2=A[!is.na(A)]
B2=B[!is.na(B)]
mean(L)
sd(L)
mean(M)
sd(M)
hist(A2, breaks=100)
#hist(B2, breaks=100)
plot(apply(L,1,mean))
test_data_45 = function(){
beta1 = -.3
beta2 = -.7
stdev=1
y= rnorm(1,0,1)
for( i in 2:30){
y[i] = beta1*y[i-1]+rnorm(1,0,stdev)}
for( i in 31:90){
y[i] = beta2*y[i-1]+rnorm(1,0,stdev)}
data_45=y
time = c(1:90)
test_data_45 = data.frame(time, data_45)
return(test_data_45)
}
iterations=1000
runs=10
L=matrix(NA,nrow=iterations,ncol=runs)
A=NA
M=NA
B=NA
for(i in 1:runs){
y=test_data_45()
current_data = y
break_p = breakpoints(current_data[,2] ~ current_data[,1], breaks = 5, h = 0.1)
starting_breakpoints = break_p$breakpoints
test1=baar(starting_breakpoints,1:90,y[,2],iterations)
print(i)
L[,i]=test1$NumBkpts
M[i]=length(starting_breakpoints[!is.na(starting_breakpoints)])
A=c(A,(unlist(test1$Breakpoints))) #Baar location of breakpoints
B=c(B,(starting_breakpoints)) #B-P
}
A2=A[!is.na(A)]
B2=B[!is.na(B)]
mean(L)
sd(L)
mean(M)
sd(M)
hist(A2, breaks=100)
#hist(B2, breaks=100)
plot(apply(L,1,mean))
test_data_45 = function(){
beta1 = .7
beta2 = .2
stdev=1
y= rnorm(1,0,1)
for( i in 2:30){
y[i] = beta1*y[i-1]+rnorm(1,0,stdev)}
for( i in 31:90){
y[i] = beta2*y[i-1]+rnorm(1,0,stdev)}
data_45=y
time = c(1:90)
test_data_45 = data.frame(time, data_45)
return(test_data_45)
}
for(i in 1:runs){
y=test_data_45()
current_data = y
break_p = breakpoints(current_data[,2] ~ current_data[,1], breaks = 5, h = 0.1)
starting_breakpoints = break_p$breakpoints
test1=baar(starting_breakpoints,1:90,y[,2],iterations)
print(i)
L[,i]=test1$NumBkpts
M[i]=length(starting_breakpoints[!is.na(starting_breakpoints)])
A=c(A,(unlist(test1$Breakpoints))) #Baar location of breakpoints
B=c(B,(starting_breakpoints)) #B-P
}
A2=A[!is.na(A)]
B2=B[!is.na(B)]
mean(L)
sd(L)
mean(M)
sd(M)
hist(A2, breaks=100)
#hist(B2, breaks=100)
plot(apply(L,1,mean))
test_data_45 = function(){
beta1 = .2
beta2 = .7
stdev=1
y= rnorm(1,0,1)
for( i in 2:30){
y[i] = beta1*y[i-1]+rnorm(1,0,stdev)}
for( i in 31:90){
y[i] = beta2*y[i-1]+rnorm(1,0,stdev)}
data_45=y
time = c(1:90)
test_data_45 = data.frame(time, data_45)
return(test_data_45)
}
iterations=1000
runs=10
L=matrix(NA,nrow=iterations,ncol=runs)
A=NA
M=NA
B=NA
for(i in 1:runs){
y=test_data_45()
current_data = y
break_p = breakpoints(current_data[,2] ~ current_data[,1], breaks = 5, h = 0.1)
starting_breakpoints = break_p$breakpoints
test1=baar(starting_breakpoints,1:90,y[,2],iterations)
print(i)
L[,i]=test1$NumBkpts
M[i]=length(starting_breakpoints[!is.na(starting_breakpoints)])
A=c(A,(unlist(test1$Breakpoints))) #Baar location of breakpoints
B=c(B,(starting_breakpoints)) #B-P
}
A2=A[!is.na(A)]
B2=B[!is.na(B)]
mean(L)
sd(L)
mean(M)
sd(M)
hist(A2, breaks=100)
#hist(B2, breaks=100)
plot(apply(L,1,mean))
test_data_45 = function(){
beta1 = .2
beta2 = .7
stdev=0.5
y= rnorm(1,0,1)
for( i in 2:30){
y[i] = beta1*y[i-1]+rnorm(1,0,stdev)}
for( i in 31:90){
y[i] = beta2*y[i-1]+rnorm(1,0,stdev)}
data_45=y
time = c(1:90)
test_data_45 = data.frame(time, data_45)
return(test_data_45)
}
iterations=1000
runs=10
L=matrix(NA,nrow=iterations,ncol=runs)
A=NA
M=NA
B=NA
for(i in 1:runs){
y=test_data_45()
current_data = y
break_p = breakpoints(current_data[,2] ~ current_data[,1], breaks = 5, h = 0.1)
starting_breakpoints = break_p$breakpoints
test1=baar(starting_breakpoints,1:90,y[,2],iterations)
print(i)
L[,i]=test1$NumBkpts
M[i]=length(starting_breakpoints[!is.na(starting_breakpoints)])
A=c(A,(unlist(test1$Breakpoints))) #Baar location of breakpoints
B=c(B,(starting_breakpoints)) #B-P
}
A2=A[!is.na(A)]
B2=B[!is.na(B)]
mean(L)
sd(L)
mean(M)
sd(M)
hist(A2, breaks=100)
#hist(B2, breaks=100)
plot(apply(L,1,mean))
test_data_45 = function(){
beta1 = .2
beta2 = .7
stdev=0.5
y= rnorm(1,0,1)
for( i in 5:30){
y[i] = beta1*y[i-1]+rnorm(1,0,stdev)}
for( i in 31:90){
y[i] = beta2*y[i-1]+rnorm(1,0,stdev)}
data_45=y
time = c(5:90)
test_data_45 = data.frame(time, data_45)
return(test_data_45)
}
iterations=1000
runs=10
L=matrix(NA,nrow=iterations,ncol=runs)
A=NA
M=NA
B=NA
for(i in 1:runs){
y=test_data_45()
current_data = y
break_p = breakpoints(current_data[,2] ~ current_data[,1], breaks = 5, h = 0.1)
starting_breakpoints = break_p$breakpoints
test1=baar(starting_breakpoints,1:90,y[,2],iterations)
print(i)
L[,i]=test1$NumBkpts
M[i]=length(starting_breakpoints[!is.na(starting_breakpoints)])
A=c(A,(unlist(test1$Breakpoints))) #Baar location of breakpoints
B=c(B,(starting_breakpoints)) #B-P
}
A2=A[!is.na(A)]
B2=B[!is.na(B)]
mean(L)
sd(L)
mean(M)
sd(M)
hist(A2, breaks=100)
#hist(B2, breaks=100)
plot(apply(L,1,mean))
test_data_45 = function(){
beta1 = .2
beta2 = .7
stdev=0.5
y= rnorm(1,0,1)
for( i in 1:10){
y[i] = beta1*y[i-1]+rnorm(1,0,stdev)}
for( i in 11:90){
y[i] = beta2*y[i-1]+rnorm(1,0,stdev)}
data_45=y
time = c(1:90)
test_data_45 = data.frame(time, data_45)
return(test_data_45)
}
iterations=1000
runs=10
L=matrix(NA,nrow=iterations,ncol=runs)
A=NA
M=NA
B=NA
for(i in 1:runs){
y=test_data_45()
current_data = y
break_p = breakpoints(current_data[,2] ~ current_data[,1], breaks = 5, h = 0.1)
starting_breakpoints = break_p$breakpoints
test1=baar(starting_breakpoints,1:90,y[,2],iterations)
print(i)
L[,i]=test1$NumBkpts
M[i]=length(starting_breakpoints[!is.na(starting_breakpoints)])
A=c(A,(unlist(test1$Breakpoints))) #Baar location of breakpoints
B=c(B,(starting_breakpoints)) #B-P
}
test_data_45 = function(){
beta1 = .2
beta2 = .7
stdev=1
y= rnorm(1,0,1)
for( i in 1:70){
y[i] = beta1*y[i-1]+rnorm(1,0,stdev)}
for( i in 71:90){
y[i] = beta2*y[i-1]+rnorm(1,0,stdev)}
data_45=y
time = c(1:90)
test_data_45 = data.frame(time, data_45)
return(test_data_45)
}
iterations=1000
runs=10
L=matrix(NA,nrow=iterations,ncol=runs)
A=NA
M=NA
B=NA
for(i in 1:runs){
y=test_data_45()
current_data = y
break_p = breakpoints(current_data[,2] ~ current_data[,1], breaks = 5, h = 0.1)
starting_breakpoints = break_p$breakpoints
test1=baar(starting_breakpoints,1:90,y[,2],iterations)
print(i)
L[,i]=test1$NumBkpts
M[i]=length(starting_breakpoints[!is.na(starting_breakpoints)])
A=c(A,(unlist(test1$Breakpoints))) #Baar location of breakpoints
B=c(B,(starting_breakpoints)) #B-P
}
